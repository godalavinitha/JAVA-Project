import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

// Expense class to represent each individual expense
class Expense {
    private double amount;
    private String category;
    private String date;

    // Constructor
    public Expense(double amount, String category, String date) {
        this.amount = amount;
        this.category = category;
        this.date = date;
    }

    // Getters and Setters
    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }

    @Override
    public String toString() {
        return "Expense [Amount=" + amount + ", Category=" + category + ", Date=" + date + "]";
    }
}

// ExpenseTracker class to manage multiple expenses
class ExpenseTracker {
    private List<Expense> expenses;

    // Constructor to initialize the expenses list
    public ExpenseTracker() {
        expenses = new ArrayList<>();
    }

    // Method to add an expense
    public void addExpense(Expense expense) {
        expenses.add(expense);
    }

    // Method to get total expense
    public double getTotalExpenses() {
        double total = 0;
        for (Expense expense : expenses) {
            total += expense.getAmount();
        }
        return total;
    }

    // Method to display all expenses
    public void displayExpenses() {
        if (expenses.isEmpty()) {
            System.out.println("No expenses recorded.");
        } else {
            System.out.println("List of Expenses:");
            for (Expense expense : expenses) {
                System.out.println(expense);
            }
        }
    }

    // Method to filter and display expenses by category
    public void displayExpensesByCategory(String category) {
        boolean found = false;
        for (Expense expense : expenses) {
            if (expense.getCategory().equalsIgnoreCase(category)) {
                System.out.println(expense);
                found = true;
            }
        }
        if (!found) {
            System.out.println("No expenses found for category: " + category);
        }
    }
}

// Main class to interact with the user
public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ExpenseTracker tracker = new ExpenseTracker();

        // Main loop to interact with the user
        while (true) {
            System.out.println("\nExpense Tracker Menu:");
            System.out.println("1. Add Expense");
            System.out.println("2. Display All Expenses");
            System.out.println("3. Display Expenses by Category");
            System.out.println("4. Total Expenses");
            System.out.println("5. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline left-over

            switch (choice) {
                case 1:
                    // Adding an expense
                    System.out.print("Enter amount: ");
                    double amount = scanner.nextDouble();
                    scanner.nextLine(); // Consume newline
                    System.out.print("Enter category: ");
                    String category = scanner.nextLine();
                    System.out.print("Enter date (YYYY-MM-DD): ");
                    String date = scanner.nextLine();
                    tracker.addExpense(new Expense(amount, category, date));
                    System.out.println("Expense added successfully.");
                    break;

                case 2:
                    // Display all expenses
                    tracker.displayExpenses();
                    break;

                case 3:
                    // Display expenses by category
                    System.out.print("Enter category to filter by: ");
                    String filterCategory = scanner.nextLine();
                    tracker.displayExpensesByCategory(filterCategory);
                    break;

                case 4:
                    // Display total expenses
                    double total = tracker.getTotalExpenses();
                    System.out.println("Total Expenses: $" + total);
                    break;

                case 5:
                    // Exit the application
                    System.out.println("Exiting Expense Tracker...");
                    scanner.close();
                    return;

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
